{"ast":null,"code":"import _objectSpread from\"/Users/nickahlers/Desktop/WeatherReact-Express-MongoDB/stormbreaker-aws/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as ActionTypes from'./ActionTypes';export var Reports=function Reports(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{isLoading:true,errMess:null,reports:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ActionTypes.ADD_REPORTS:return _objectSpread(_objectSpread({},state),{},{isLoading:false,errMess:null,reports:action.payload});case ActionTypes.REPORTS_LOADING:return _objectSpread(_objectSpread({},state),{},{isLoading:true,errMess:null,reports:[]});case ActionTypes.REPORTS_FAILED:return _objectSpread(_objectSpread({},state),{},{isLoading:false,errMess:action.payload});default:return state;}};","map":{"version":3,"sources":["/Users/nickahlers/Desktop/WeatherReact-Express-MongoDB/stormbreaker-aws/client/src/redux/reports.js"],"names":["ActionTypes","Reports","state","isLoading","errMess","reports","action","type","ADD_REPORTS","payload","REPORTS_LOADING","REPORTS_FAILED"],"mappings":"oMAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,eAA7B,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAIT,IAJUC,CAAAA,KAIV,2DAJkB,CAC5BC,SAAS,CAAE,IADiB,CAE5BC,OAAO,CAAE,IAFmB,CAG5BC,OAAO,CAAE,EAHmB,CAIlB,IAAXC,CAAAA,MAAW,2CACV,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKP,CAAAA,WAAW,CAACQ,WAAjB,CACI,sCAAYN,KAAZ,MAAmBC,SAAS,CAAE,KAA9B,CAAqCC,OAAO,CAAE,IAA9C,CAAoDC,OAAO,CAAEC,MAAM,CAACG,OAApE,GAEJ,IAAKT,CAAAA,WAAW,CAACU,eAAjB,CACI,sCAAYR,KAAZ,MAAmBC,SAAS,CAAE,IAA9B,CAAoCC,OAAO,CAAE,IAA7C,CAAmDC,OAAO,CAAE,EAA5D,GAEJ,IAAKL,CAAAA,WAAW,CAACW,cAAjB,CACI,sCAAYT,KAAZ,MAAmBC,SAAS,CAAE,KAA9B,CAAqCC,OAAO,CAAEE,MAAM,CAACG,OAArD,GAEJ,QACI,MAAOP,CAAAA,KAAP,CAXR,CAaH,CAlBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\nexport const Reports = (state = {\n    isLoading: true,\n    errMess: null,\n    reports: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_REPORTS:\n            return { ...state, isLoading: false, errMess: null, reports: action.payload };\n\n        case ActionTypes.REPORTS_LOADING:\n            return { ...state, isLoading: true, errMess: null, reports: [] }\n\n        case ActionTypes.REPORTS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}